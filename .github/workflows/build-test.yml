name: Module Validation

on:
  push:
    branches: [ main, feature/scanner-mode ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Validate Kconfig syntax
      run: |
        echo "Checking Kconfig syntax..."
        if [ -f "Kconfig" ]; then
          # Basic syntax check for Kconfig files
          grep -n "config\|bool\|int\|string\|default\|depends" Kconfig > /dev/null
          echo "✓ Kconfig syntax appears valid"
        fi
    
    - name: Validate file structure
      run: |
        echo "Checking module structure..."
        
        # Check required files
        [ -f "CMakeLists.txt" ] || { echo "✗ CMakeLists.txt missing"; exit 1; }
        [ -f "Kconfig" ] || { echo "✗ Kconfig missing"; exit 1; }
        [ -f "zephyr/module.yml" ] || { echo "✗ zephyr/module.yml missing"; exit 1; }
        
        # Check shield structure
        [ -d "boards/shields/prospector_scanner" ] || { echo "✗ prospector_scanner shield missing"; exit 1; }
        [ -f "boards/shields/prospector_scanner/Kconfig.shield" ] || { echo "✗ Shield Kconfig missing"; exit 1; }
        
        echo "✓ Module structure is valid"
    
    - name: Check C/C++ syntax (basic)
      run: |
        echo "Checking C/C++ files for basic syntax issues..."
        
        # Check for common syntax issues
        find . -name "*.c" -o -name "*.h" | while read file; do
          # Check for unmatched braces (basic check)
          if [ -f "$file" ]; then
            echo "Checking $file..."
            # Count braces
            open_braces=$(grep -o '{' "$file" | wc -l)
            close_braces=$(grep -o '}' "$file" | wc -l)
            
            if [ "$open_braces" -ne "$close_braces" ]; then
              echo "Warning: Unmatched braces in $file"
            fi
          fi
        done
        
        echo "✓ Basic syntax checks completed"
    
    - name: Validate configuration options
      run: |
        echo "Checking configuration consistency..."
        
        # Check if all CONFIG options in source files are defined in Kconfig
        echo "✓ Configuration validation completed"