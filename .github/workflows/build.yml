name: Build Tests

on: [push, pull_request, workflow_dispatch]

jobs:
  test-keyboard-with-advertisement:
    runs-on: ubuntu-latest
    name: Test Keyboard with Advertisement
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: prospector-zmk-module

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install West
        run: pip3 install west

      - name: Install Zephyr dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends git cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
            make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

      - name: Cache west modules
        uses: actions/cache@v4
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('prospector-zmk-module/test/advertisement_test/config/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: West Init
        run: west init -l prospector-zmk-module/test/advertisement_test/config

      - name: West Update
        run: west update

      - name: West Zephyr export
        run: west zephyr-export

      - name: Install ARM GCC toolchain
        run: |
          wget -O gcc-arm-none-eabi.tar.xz "https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz"
          tar -xf gcc-arm-none-eabi.tar.xz
          echo "$PWD/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin" >> $GITHUB_PATH

      - name: West Build (Corne with Advertisement)
        run: west build -s zmk/app -b nice_nano_v2 -- -DSHIELD=corne_left -DZMK_CONFIG="$GITHUB_WORKSPACE/prospector-zmk-module/test/advertisement_test/config"

  test-scanner-mode:
    runs-on: ubuntu-latest
    name: Test Prospector Scanner
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: prospector-zmk-module

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install West
        run: pip3 install west

      - name: Install Zephyr dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends git cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
            make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

      - name: Cache west modules
        uses: actions/cache@v4
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('prospector-zmk-module/test/scanner_build_test/config/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: West Init
        run: west init -l prospector-zmk-module/test/scanner_build_test/config

      - name: West Update
        run: west update

      - name: West Zephyr export
        run: west zephyr-export

      - name: Install ARM GCC toolchain
        run: |
          wget -O gcc-arm-none-eabi.tar.xz "https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz"
          tar -xf gcc-arm-none-eabi.tar.xz
          echo "$PWD/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin" >> $GITHUB_PATH

      - name: West Build (Prospector Scanner)
        run: west build -s zmk/app -b seeeduino_xiao_ble -- -DSHIELD=prospector_scanner -DZMK_CONFIG="$GITHUB_WORKSPACE/prospector-zmk-module/test/scanner_build_test/config"